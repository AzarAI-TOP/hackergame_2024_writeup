from transformers import LlamaTokenizer

tokenizer = LlamaTokenizer.from_pretrained('meta-llama/Meta-Llama-3-70B')

html_content = """<!DOCTYPE html>\n<html lang="zh">\n    <head>\n        <meta charset="UTF-8">\n        <link rel="stylesheet" href="static/bootstrap/css/bootstrap.min.css">\n        <link rel="stylesheet" href="static/main.css?v2">\n        <meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=no">\n        <title>猫咪问答（十周年纪念版）</title>\n    </head>\n    <body class="text-center">\n        <form class="form-getflag" method="post">\n            <div id="app">\n                <h1>猫咪问答（十周年纪念版）</h1>\n\n                <div class="alert alert-secondary" role="alert">\n                    本次测验总得分为 0。没有达到 60 分，不能给你 flag（摊手）\n                </div>\n\n\n\n\n                <div class="card">\n                    <div class="card-body question-main">\n                        <div class="question-q">\n                            1. 在 Hackergame 2015 比赛开始前一天晚上开展的赛前讲座是在哪个教室举行的？<b>（30 分）</b><br /><small class="text-muted" font-size="5">提示：填写教室编号，如 5207、3A101。</small>\n                        </div>\n\n                        <div class="input-group input-group-sm mb-3">\n                            <div class="input-group-prepend">\n                              <span class="input-group-text" id="q1">答案</span>\n                            </div>\n                            <input type="text" name="q1" class="form-control" aria-describedby="q1">\n                          </div>\n                    </div>\n                </div>\n                <br>\n\n                <div class="card">\n                    <div class="card-body question-main">\n                        <div class="question-q">\n                            2. 众所周知，Hackergame 共约 25 道题目。近五年（不含今年）举办的 Hackergame 中，题目数量最接近这个数字的那一届比赛里有多少人注册参加？<b>（30 分）</b><br /><small class="text-muted" font-size="5">提示：是一个非负整数。</small>\n                        </div>\n\n                        <div class="input-group input-group-sm mb-3">\n                            <div class="input-group-prepend">\n                              <span class="input-group-text" id="q2">答案</span>\n                            </div>\n                            <input type="text" name="q2" class="form-control" aria-describedby="q2">\n                          </div>\n                    </div>\n                </div>\n                <br>\n\n                <div class="card">\n                    <div class="card-body question-main">\n                        <div class="question-q">\n                            3. Hackergame 2018 让哪个热门检索词成为了科大图书馆当月热搜第一？<b>（20 分）</b><br /><small class="text-muted" font-size="5">提示：仅由中文汉字构成。</small>\n                        </div>\n\n                        <div class="input-group input-group-sm mb-3">\n                            <div class="input-group-prepend">\n                              <span class="input-group-text" id="q3">答案</span>\n                            </div>\n                            <input type="text" name="q3" class="form-control" aria-describedby="q3">\n                          </div>\n                    </div>\n                </div>\n                <br>\n\n                <div class="card">\n                    <div class="card-body question-main">\n                        <div class="question-q">\n                            4. 在今年的 USENIX Security 学术会议上中国科学技术大学发表了一篇关于电子邮件伪造攻击的论文，在论文中作者提出了 6 种攻击方法，并在多少个电子邮件服务提供商及客户端的组合上进行了实验？<b>（10 分）</b><br /><small class="text-muted" font-size="5">提示：是一个非负整数。</small>\n                        </div>\n\n                        <div class="input-group input-group-sm mb-3">\n                            <div class="input-group-prepend">\n                              <span class="input-group-text" id="q4">答案</span>\n                            </div>\n                            <input type="text" name="q4" class="form-control" aria-describedby="q4">\n                          </div>\n                    </div>\n                </div>\n                <br>\n\n                <div class="card">\n                    <div class="card-body question-main">\n                        <div class="question-q">\n                            5. 10 月 18 日 Greg Kroah-Hartman 向 Linux 邮件列表提交的一个 patch 把大量开发者从 MAINTAINERS 文件中移除。这个 patch 被合并进 Linux mainline 的 commit id 是多少？<b>（5 分）</b><br /><small class="text-muted" font-size="5">提示：id 前 6 位，字母小写，如 c1e939。</small>\n                        </div>\n\n                        <div class="input-group input-group-sm mb-3">\n                            <div class="input-group-prepend">\n                              <span class="input-group-text" id="q5">答案</span>\n                            </div>\n                            <input type="text" name="q5" class="form-control" aria-describedby="q5">\n                          </div>\n                    </div>\n                </div>\n                <br>\n\n                <div class="card">\n                    <div class="card-body question-main">\n                        <div class="question-q">\n                            6. 大语言模型会把输入分解为一个一个的 token 后继续计算，请问这个网页的 HTML 源代码会被 Meta 的 Llama 3 70B 模型的 tokenizer 分解为多少个 token？<b>（5 分）</b><br /><small class="text-muted" font-size="5">提示：首次打开本页时的 HTML 源代码，答案是一个非负整数</small>\n                        </div>\n\n                        <div class="input-group input-group-sm mb-3">\n                            <div class="input-group-prepend">\n                              <span class="input-group-text" id="q6">答案</span>\n                            </div>\n                            <input type="text" name="q6" class="form-control" aria-describedby="q6">\n                          </div>\n                    </div>\n                </div>\n                <br>\n\n\n                <br>\n                <input type="submit" class="btn btn-lg btn-primary btn-block" value="提交" />\n            </div>\n        </form>\n        <script src="static/jquery.min.js"></script>\n        <script src="static/bootstrap/js/bootstrap.min.js"></script>\n        <script>\n            // using localStorage to remember user input\n            (function () {\n                if (localStorage === undefined) {\n                    return;\n                }\n                var token_id = 1573;\n                if (localStorage.getItem("token_id") !== String(token_id)) {\n                    // clear localStorage\n                    localStorage.clear();\n                }\n                localStorage.setItem("token_id", token_id);\n\n                var q1 = localStorage.getItem("q1");\n                if (q1 !== null) {\n                    $("input[name=q1]").val(q1);\n                }\n\n                var q2 = localStorage.getItem("q2");\n                if (q2 !== null) {\n                    $("input[name=q2]").val(q2);\n                }\n\n                var q3 = localStorage.getItem("q3");\n                if (q3 !== null) {\n                    $("input[name=q3]").val(q3);\n                }\n\n                var q4 = localStorage.getItem("q4");\n                if (q4 !== null) {\n                    $("input[name=q4]").val(q4);\n                }\n\n                var q5 = localStorage.getItem("q5");\n                if (q5 !== null) {\n                    $("input[name=q5]").val(q5);\n                }\n\n                var q6 = localStorage.getItem("q6");\n                if (q6 !== null) {\n                    $("input[name=q6]").val(q6);\n                }\n\n                var button = $("input[type=submit]");\n                button.click(function () {\n\n                    localStorage.setItem("q1", $("input[name=q1]").val());\n\n                    localStorage.setItem("q2", $("input[name=q2]").val());\n\n                    localStorage.setItem("q3", $("input[name=q3]").val());\n\n                    localStorage.setItem("q4", $("input[name=q4]").val());\n\n                    localStorage.setItem("q5", $("input[name=q5]").val());\n\n                    localStorage.setItem("q6", $("input[name=q6]").val());\n\n                });\n            })()\n        </script>\n    </body>\n</html>"""

# 对HTML源代码进行tokenization
tokens = tokenizer.tokenize(html_content)

# 计算token数量
num_tokens = len(tokens)
